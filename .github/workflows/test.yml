name: Lint, test and run application
on:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: "Setup python"
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
  
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install 
      
      - name: Run tests
        run: make lint

      - name: Run linters
        run: make test
  
  prepare-env:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: "Setup python"
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
  
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install 

  create-env-config:
    name: Copy secrets to env
    runs-on: self-hosted
    needs: prepare-env
    steps:
      -
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_API_KEY: ${{ secrets.API_KEY }}
          file_name: .env
          fail_on_empty: false

  deploy:
    needs: [test, create-env-config]
    runs-on: self-hosted
    steps:
      - name: Stop docker services
        run: docker compose stop

      - name: Run docker image
        run: docker compose up --build -d --force-recreate

      - name: Check service
        run: docker ps -a